<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- com.playchoice.play.dto.PlayDTO -->
<mapper namespace="com.playchoice.mappers.playMapper">
	<!-- com.playchoice.play.dto.PlayDTO -->
	<select id="playList" resultType="PlayDTO">
		SELECT play.*,
		min(`schedule`.s_price) AS lowest_price
		FROM play, `schedule`
		WHERE
			play.p_id = `schedule`.p_id
			AND play.p_status = '1'
			AND `schedule`.s_time <![CDATA[>]]> now()
		GROUP BY play.p_id
	</select>

	<select id="playListFilter" resultType="PlayDTO"
		parameterType="PlayMenuDTO">
		SELECT play.*,
		min(`schedule`.s_price) AS lowest_price
		FROM play,
		`schedule`
		WHERE
		play.p_id = `schedule`.p_id
		AND `schedule`.s_time <![CDATA[>]]> now()
		<if test="a_id != 0 ">
			AND play.a_id =
			#{a_id}
		</if>
		<if test="g_id!= 0 ">
			AND play.g_id =
			#{g_id}
		</if>
		AND play.p_status = '1'
		GROUP BY
		play.p_id
	</select>

	<select id="playSearchList" resultType="PlayDTO"
		parameterType="java.lang.String">
		SELECT play.*,
		min(`schedule`.s_price) AS lowest_price
		FROM play, `schedule`
		WHERE
		play.p_id = `schedule`.p_id
		AND play.p_status
		= '1'
		And (
		play.p_name like CONCAT('%',#{search},'%')
		OR play.p_info
		like CONCAT('%',#{search},'%')
		OR play.p_location like
		CONCAT('%',#{search},'%') )

		GROUP BY play.p_id
	</select>


	<select id="playPrice" resultType="Integer"
		parameterType="Integer">
		SELECT min(`schedule`.s_price) AS lowest_price
		FROM
		`schedule`
		WHERE
		`schedule`.p_id = #{p_id}
	</select>

	<select id="playRankList" resultType="PlayDTO">
		SELECT * FROM
		play as pl,
		(SELECT sc.p_id FROM schedule as sc,
		(SELECT s_id
		FROM payment WHERE
		YEARWEEK(p_time) = YEARWEEK(now())-1 )
		as pm
		where sc.s_id = pm.s_id)as
		sp
		where pl.p_id = sp.p_id
		group by pl.p_id
		order by count(pl.p_id) desc
	</select>

	<select id="playDetail" resultType="PlayDTO">
		select *
		from play
		where p_id =
		#{p_id}
	</select>

	<select id="viewCal" parameterType="Integer"
		resultType="ScheduleDTO">
		select *
		from schedule
		where p_id = #{p_id}
		AND s_canceled = 0
		AND s_time <![CDATA[>]]>
		now()
		order by s_time
	</select>

	<select id="getReviewScore" parameterType="Integer"
		resultType="java.util.HashMap">
		SELECT
		count(*) AS cnt, round(avg(review.r_play_score),1) AS
		avgscore
		FROM
		play, schedule, review, member
		WHERE
		review.s_id =
		schedule.s_id
		AND review.r_deleted = '0'
		AND schedule.p_id = #{p_id}
		AND
		review.m_code = member.m_code;

	</select>

	<select id="getReviewSmall" parameterType="Integer"
		resultType="java.util.HashMap">
		SELECT
		member.m_id AS m_id, review.r_content AS r_content,
		review.r_register_time AS
		r_register_time
		,review.r_play_score AS
		r_play_score
		FROM
		play, schedule, review, member
		WHERE
		review.s_id =
		schedule.s_id
		AND review.r_deleted = '0'
		AND schedule.p_id = #{p_id}
		AND
		review.m_code = member.m_code
		ORDER BY review.r_register_time desc
		LIMIT 20;
	</select>

	<!-- 아이디를 가져올떄 마지막 2문자를 **로 처리하여 가져옴 -->
	<select id="getQnA" parameterType="Integer"
		resultType="java.util.HashMap">
		SELECT
		replace(member.m_id,right(member.m_id,2),'**') AS
		m_id
		, member.m_code AS m_code
		, member.m_level AS m_level
		,
		question_answer.p_id AS p_id
		, question_answer.q_time AS q_time
		,
		question_answer.q_content AS q_content
		, question_answer.q_id AS q_id
		,
		question_answer.q_target_id AS q_target_id
		FROM
		question_answer, member
		WHERE
		question_answer.m_code = member.m_code
		AND question_answer.p_id =
		#{p_id}
		AND question_answer.q_deleted = '0'
		ORDER BY
		q_target_id desc ,
		q_id;
	</select>

	<!-- 오늘내일 리스트 -->
	<select id="playTodayList" parameterType="java.lang.String"
		resultType="PlayDTO">
		SELECT play.*, min(`schedule`.s_price) as lowest_price
		FROM
		`schedule`,play
		WHERE
		date_format(`schedule`.s_time,"%Y-%m-%d") =#{s_time}
		AND
		play.p_id=`schedule`.p_id
		AND play.p_status = '1'
		<if test="a_id != 0 ">
			AND play.a_id =
			#{a_id}
		</if>
		<if test="g_id!= 0 ">
			AND play.g_id =
			#{g_id}
		</if>
		group by
		(`schedule`.p_id);
	</select>

	<!-- 지역 리스트 -->
	<select id="arealist" resultType="AreaDTO">
		SELECT * from play.area order
		by a_id;
	</select>
	<!-- 장르 리스트 -->
	<select id="genrelist" resultType="GenreDTO">
		SELECT * from play.genre order
		by g_id;
	</select>

</mapper>